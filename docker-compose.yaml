version: "3.5"

services:
  gobackend:
    container_name: "goserver-fl"
    build:
      context: ./Backend/GoBackend
      dockerfile: dockerfile.godev
    environment:
      MONGO_URI: mongodb://root:root@10.1.1.4:27017/
      NAME_DATABASE: bet_store
      Secretkey: hsoVvtJfWavHIhmOkBp98u4qrR1w73SIG90FUq1H7YerUpgU5GD9gAnoGMr6kWQKlgLHAKJNfDbkJRlTiZwaxK5B5pEf0FlBpNF5RFxASHa0V4_vFJn0K7HrCCzvESlm0LcGJmaTiV_jPlHCOU1xwlxsQLvLUwL__GxR2PkiFzhF2K4PAoDcMiD4ojPZgEUsEeKvtf7NHiD3P7_Cw0fYOetbWW5irwiAQtxZpqZSwN-wy7zIwLsbjzZbyUgMmUpcNrObJo_j9Hn_Tv0-cPfBKek-qQzu79VzaByX9rDFyhc6Z1plAGUb3w2c_qkLitnyWi2X0ATZv8TVkxDRFiwj2Q
      Issuer: localhost
    ports:
      - "8181:8080"
    depends_on:
      - cdnserver
      - database
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./Backend/GoBackend:/app/Backend/GoBackend
      - ./Backend/GoBackend/go.mod:/app/Backend/GoBackend/go.mod
    networks:
      backend:
        ipv4_address: "10.1.1.2"
  cdnserver:
    container_name: "cdnserver-fl"
    build:
      context: ./Backend/CDNServer
      dockerfile: dockerfile.cdn
    ports:
      - "8182:8888"
    volumes:
      - ./Backend/CDNServer:/app/Backend/CDNServer
      - ./Backend/CDNServer/go.mod:/app/Backend/CDNServer/go.mod
    networks:
      backend:
        ipv4_address: "10.1.1.3"
  database:
    container_name: "mongodtb-fl"
    image: mongo:3-xenial
    logging:
      driver: none
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: flight_ticket
    ports:
      - "8183:27017"
      - "8184:28017"
    volumes:
      - ./Backend/Database/log:/var/log/mongodb
      - ./Backend/Database/startup/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./Backend/Database/data:/data/db
      # - ./Backend/Database/startup:/Backend/Database/startup:ro
    networks:
      backend:
        ipv4_address: "10.1.1.4"
  javabackend:
    container_name: "javabackend-fl"
    build:
      context: ./Backend/JavaBackend
      dockerfile: dockerfile.javadev
    ports:
      - "8185:8081"
    depends_on:
      - cdnserver
      - database
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./Backend/JavaBackend:/app
      - ./Backend/JavaBackend/logs:/app/logs
    networks:
      backend:
        ipv4_address: "10.1.1.5"
  nodebackend:
    container_name: "nodebackend-fl"
    build:
      context: ./Backend/NodeJSBackend
      dockerfile: dockerfile.node
    ports:
      - "8186:5000"
    depends_on:
      - cdnserver
      - database
    environment:
      MONGO_URI: mongodb://root:root@10.1.1.4:27017/
      NAME_DATABASE: flight_ticket
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./Backend/NodeJSBackend/config:/app/config
      - ./Backend/NodeJSBackend/controller:/app/controller
      - ./Backend/NodeJSBackend/middleware:/app/middleware
      - ./Backend/NodeJSBackend/models:/app/models
      - ./Backend/NodeJSBackend/routes:/app/routes
      - ./Backend/NodeJSBackend/server.js:/app/server.js
      - ./Backend/NodeJSBackend/seeder.js:/app/seeder.js
    networks:
      backend:
        ipv4_address: "10.1.1.6"
networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: "10.1.1.0/27"
